{"version":3,"sources":["components/visualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["Visualizer","props","state","arr","idxes","disabled","start","cur","next","upto","size","width","handleClick","bind","animate","bubbleSort","mergeSort","mergeSortUtil","quickSort","quickSortUtil","pratitioning","shuffle","this","e","setState","target","name","tempArr","tempIdxes","i","push","Math","floor","random","console","log","l","r","animations","piv_idx","JSON","stringify","temp","pivot","newArr","newState","length","parseInt","j","setInterval","parse","hasOwnProperty","clearInterval","style","backgroundColor","boxShadow","display","fiex","justifyContent","padding","color","fontSize","marginRight","borderRadius","cursor","border","onClick","flexDirection","map","elem","key","height","margin","Component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8a456549.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Visualizer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      arr: [],\n      idxes: [],\n      disabled: false,\n      start: false,\n      cur: -1,\n      next: -1,\n      upto: -1,\n      size: -1,\n      width: 5,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.animate = this.animate.bind(this);\n    this.bubbleSort = this.bubbleSort.bind(this);\n    this.mergeSort = this.mergeSort.bind(this);\n    this.mergeSortUtil = this.mergeSortUtil.bind(this);\n    this.quickSort = this.quickSort.bind(this);\n    this.quickSortUtil = this.quickSortUtil.bind(this);\n    this.pratitioning = this.pratitioning.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n  }\n\n  componentDidMount() {\n    this.shuffle();\n  }\n\n  handleClick(e) {\n    this.setState({ disabled: true });\n\n    if(e.target.name == \"bubble\"){\n      this.bubbleSort();\n    }else if(e.target.name == \"merge\"){\n      this.mergeSort();\n    }else if(e.target.name == \"quick\"){\n      this.quickSort();\n    }else if(e.target.name == \"shuffle\"){\n      this.shuffle();\n      this.setState({ disabled: false });\n    }\n    \n  }\n\n  shuffle(){\n    let size = 100,\n      tempArr = [], tempIdxes = [];\n    for (let i = 0; i < size; ++i){\n      tempArr.push((Math.floor(Math.random() * 10000) % 500) + 5);\n      tempIdxes.push(0);\n    }\n    this.setState({ idxes: tempIdxes, arr: tempArr, upto: size, size: size });\n    console.log(this.state.arr);\n    return;\n  }\n\n  pratitioning(arr, l, r, animations, state) {\n    let piv_idx = l;\n    state.cur = l;\n    state.next = l - 1;\n    animations.push(JSON.stringify(state));\n    for (let i = l; i < r; ++i) {\n      if (arr[i] <= arr[r]) {\n        let temp = arr[i];\n        arr[i] = arr[piv_idx];\n        arr[piv_idx] = temp;\n        ++piv_idx;\n        state.cur = i;\n        state.next = piv_idx;\n        state.arr = arr;\n        animations.push(JSON.stringify(state));\n      } else {\n        state.cur = i;\n        state.next = piv_idx;\n        state.arr = arr;\n        animations.push(JSON.stringify(state));\n      }\n    }\n    let temp = arr[r];\n    arr[r] = arr[piv_idx];\n    arr[piv_idx] = temp;\n    state.cur = r;\n    state.next = piv_idx;\n    state.arr = arr;\n    state.idxes[piv_idx] = 1;\n    animations.push(JSON.stringify(state));\n    return piv_idx;\n  }\n\n  quickSortUtil(arr, l, r, animations, state) {\n    if (l >= r) return;\n    let pivot = this.pratitioning(arr, l, r, animations, state);\n    this.quickSortUtil(arr, l, pivot - 1, animations, state);\n    this.quickSortUtil(arr, pivot + 1, r, animations, state);\n  }\n\n  quickSort() {\n    this.setState({ start: true });\n    let newArr = [];\n    let animations = [];\n    let idxes = [];\n    for (let i = 0; i < this.state.size; ++i) {\n      newArr[i] = this.state.arr[i];\n      idxes.push(0);\n    }\n    var newState = {\n      arr: newArr,\n      idxes: idxes,\n      cur: -1,\n      next: -1,\n      upto: newArr.length,\n      size: newArr.length,\n    };\n    this.quickSortUtil(newArr, 0, newArr.length - 1, animations, newState);\n    console.log(newArr);\n    this.animate(animations);\n  }\n\n  mergeSortUtil(arr, l, r, animations, newState) {\n    if (l == r) {\n      return;\n    }\n    // console.log(newState);\n    this.mergeSortUtil(arr, l, parseInt((l + r) / 2), animations, newState);\n    this.mergeSortUtil(arr, parseInt((l + r) / 2) + 1, r, animations, newState);\n    let i = l,\n      j = parseInt((l + r) / 2) + 1,\n      newArr = [];\n    newState.cur = i;\n    newState.next = j;\n    animations.push(JSON.stringify(newState));\n    while (i <= parseInt((l + r) / 2) && j <= r) {\n      if (arr[i] > arr[j]) {\n        newArr.push(arr[j]);\n        ++j;\n      } else {\n        newArr.push(arr[i]);\n        ++i;\n      }\n      newState.cur = i;\n      newState.next = j;\n      animations.push(JSON.stringify(newState));\n    }\n    while (i <= parseInt((l + r) / 2)) {\n      newArr.push(arr[i]);\n      ++i;\n      newState.cur = i;\n      newState.next = j;\n      animations.push(JSON.stringify(newState));\n    }\n    while (j <= r) {\n      newArr.push(arr[j]);\n      ++j;\n      newState.cur = i;\n      newState.next = j;\n      animations.push(JSON.stringify(newState));\n    }\n    for (let i = l; i <= r; ++i) {\n      arr[i] = newArr[i - l];\n      newState.cur = i;\n      newState.arr = arr;\n      animations.push(JSON.stringify(newState));\n    }\n  }\n\n  mergeSort() {\n    this.setState({ start: true });\n    let newArr = [];\n    let animations = [];\n    for (let i = 0; i < this.state.size; ++i) {\n      newArr[i] = this.state.arr[i];\n    }\n    var newState = {\n      arr: newArr,\n      cur: -1,\n      next: -1,\n      upto: newArr.length,\n      size: newArr.length,\n    };\n\n    this.mergeSortUtil(newArr, 0, newArr.length - 1, animations, newState);\n    // console.log(newArr, animations);\n    this.animate(animations);\n  }\n\n  bubbleSort() {\n    this.setState({ start: true });\n    let newArr = [];\n    let animations = [];\n    for (let i = 0; i < this.state.size; ++i) {\n      newArr[i] = this.state.arr[i];\n    }\n    var newState = {\n      arr: newArr,\n      cur: -1,\n      next: -1,\n      upto: newArr.length,\n      size: newArr.length,\n    };\n    for (let i = 0; i < this.state.size; ++i) {\n      for (let j = 0; j < this.state.size - i - 1; ++j) {\n        newState.cur = j;\n        newState.next = j + 1;\n        if (newArr[j] > newArr[j + 1]) {\n          newArr[j] ^= newArr[j + 1];\n          newArr[j + 1] ^= newArr[j];\n          newArr[j] ^= newArr[j + 1];\n          newState.arr = newArr;\n        }\n        animations.push(JSON.stringify(newState));\n      }\n      newState.upto = newArr.length - i - 2;\n      animations.push(JSON.stringify(newState));\n    }\n    this.animate(animations);\n    // console.log(this.state.arr);\n    // console.log(newArr, animations);\n  }\n\n  animate(animations) {\n    let i = 0;\n    let animate = setInterval(() => {\n      let temp = JSON.parse(animations[i]);\n      if(!temp.hasOwnProperty(\"idxes\")){\n        temp.idxes = this.state.idxes;\n      }\n      this.setState({\n        arr: temp.arr,\n        idxes: temp.idxes,\n        cur: temp.cur,\n        next: temp.next,\n        upto: temp.upto,\n        size: temp.size,\n      });\n      ++i;\n      if (i == animations.length) {\n        this.setState({ upto: -1, cur: -1, next: -1 });\n        clearInterval(animate);\n      }\n    }, 1);\n  }\n\n  render() {\n    // console.log(this.state);\n    // if (!this.state.start) {\n    return (\n      <>\n        <div style={{width: \"100vw\", backgroundColor: \"black\", boxShadow: \"0 8px 6px -6px #3b3b3b\", display: \"flex\", fiex: \"row\", justifyContent: \"space-between\"}}>\n          <div style={{padding: \"10px\", color: \"#00cc01\", fontSize: \"x-large\"}}>Sorting Wait!</div>\n          <div style={{padding: \"10px\"}}>\n            <button style={{marginRight: \"10px\", backgroundColor: \"#00cc01\", color: \"#1b1b1b\", borderRadius: \"5px\", cursor: \"pointer\", border: \"none\", padding: \"5px\"}} disabled={this.state.disabled} name=\"bubble\" onClick={this.handleClick}>\n              {this.state.disabled ? \"Disabled\": \"BubbleSort\"}\n            </button>\n            <button style={{marginRight: \"10px\", backgroundColor: \"#00cc01\", color: \"#1b1b1b\", borderRadius: \"5px\", cursor: \"pointer\", border: \"none\", padding: \"5px\"}} disabled={this.state.disabled} name=\"merge\" onClick={this.handleClick}>\n              {this.state.disabled ?\"Disabled\" : \"MergeSort\"}\n            </button>\n            <button style={{marginRight: \"10px\", backgroundColor: \"#00cc01\", color: \"#1b1b1b\", borderRadius: \"5px\", cursor: \"pointer\", border: \"none\", padding: \"5px\"}} disabled={this.state.disabled} name=\"quick\" onClick={this.handleClick}>\n              {this.state.disabled ?\"Disabled\" : \"QuickSort\"}\n            </button>\n            <button style={{marginRight: \"10px\", backgroundColor: \"#00ccFF\", color: \"#1b1b1b\", borderRadius: \"5px\", cursor: \"pointer\", border: \"none\", padding: \"5px\"}} name=\"shuffle\" onClick={this.handleClick}>\n              Reshuffle\n            </button>\n          </div>\n        </div>\n        {!this.state.start && \n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {this.state.arr.map((elem, key) => {\n              return (\n                <div\n                  key={key}\n                  style={{\n                    height: `${elem}px`,\n                    width: `${this.state.width}px`,\n                    backgroundColor: \"purple\",\n                    margin: \"1px\",\n                  }}\n                ></div>\n              );\n            })}\n          </div>\n        }\n        {this.state.start &&\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {this.state.arr.map((elem, key) => {\n              return (\n                <div\n                  key={key}\n                  style={{\n                    height: `${elem}px`,\n                    width: `${this.state.width}px`,\n                    backgroundColor:\n                      this.state.idxes[key] === 1\n                        ? \"#00cc01\"\n                        : this.state.cur === key\n                        ? \"yellow\"\n                        : this.state.next === key\n                        ? \"red\"\n                        : key > this.state.upto\n                        ? \"#00cc01\"\n                        : \"purple\",\n                    margin: \"1px\",\n                  }}\n                ></div>\n              );\n            })}\n          </div>\n        }\n      </>\n    );\n  }\n}\n\nexport default Visualizer;\n","import React from 'react';\nimport Visualizer from './components/visualizer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}